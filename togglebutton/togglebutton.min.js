this.primevue=this.primevue||{},this.primevue.togglebutton=function(e,t){"use strict";var i={name:"ToggleButton",emits:["update:modelValue","change","click","focus","blur"],props:{modelValue:Boolean,onIcon:String,offIcon:String,onLabel:{type:String,default:"Yes"},offLabel:{type:String,default:"No"},iconPos:{type:String,default:"left"},disabled:{type:Boolean,default:!1},tabindex:{type:Number,default:null},inputId:{type:String,default:null},inputClass:{type:String,default:null},inputStyle:{type:null,default:null},inputProps:{type:null,default:null},"aria-labelledby":{type:String,default:null},"aria-label":{type:String,default:null}},outsideClickListener:null,data:()=>({focused:!1}),mounted(){this.bindOutsideClickListener()},beforeUnmount(){this.unbindOutsideClickListener()},methods:{onClick(e){this.disabled||(this.$emit("update:modelValue",!this.modelValue),this.$emit("change",e),this.$emit("click",e),this.focused=!0)},onFocus(e){this.focused=!0,this.$emit("focus",e)},onBlur(e){this.focused=!1,this.$emit("blur",e)},bindOutsideClickListener(){this.outsideClickListener||(this.outsideClickListener=e=>{this.focused&&!this.$refs.container.contains(e.target)&&(this.focused=!1)},document.addEventListener("click",this.outsideClickListener))},unbindOutsideClickListener(){this.outsideClickListener&&(document.removeEventListener("click",this.outsideClickListener),this.outsideClickListener=null)}},computed:{buttonClass(){return["p-button p-togglebutton p-component",{"p-focus":this.focused,"p-button-icon-only":this.hasIcon&&!this.hasLabel,"p-disabled":this.disabled,"p-highlight":!0===this.modelValue}]},iconClass(){return[this.modelValue?this.onIcon:this.offIcon,"p-button-icon",{"p-button-icon-left":"left"===this.iconPos&&this.label,"p-button-icon-right":"right"===this.iconPos&&this.label}]},hasLabel(){return this.onLabel&&this.onLabel.length>0&&this.offLabel&&this.offLabel.length>0},hasIcon(){return this.onIcon&&this.onIcon.length>0&&this.offIcon&&this.offIcon.length>0},label(){return this.hasLabel?this.modelValue?this.onLabel:this.offLabel:"&nbsp;"}},directives:{ripple:e}};const l={class:"p-hidden-accessible"},n=["id","checked","value","aria-labelledby","aria-label"],s={class:"p-button-label"};return i.render=function(e,i,o,a,u,c){const r=t.resolveDirective("ripple");return t.withDirectives((t.openBlock(),t.createElementBlock("div",{ref:"container",class:t.normalizeClass(c.buttonClass),onClick:i[2]||(i[2]=e=>c.onClick(e))},[t.createElementVNode("span",l,[t.createElementVNode("input",t.mergeProps({id:o.inputId,type:"checkbox",role:"switch",class:o.inputClass,style:o.inputStyle,checked:o.modelValue,value:o.modelValue,"aria-labelledby":e.ariaLabelledby,"aria-label":e.ariaLabel,onFocus:i[0]||(i[0]=e=>c.onFocus(e)),onBlur:i[1]||(i[1]=e=>c.onBlur(e))},o.inputProps),null,16,n)]),c.hasIcon?(t.openBlock(),t.createElementBlock("span",{key:0,class:t.normalizeClass(c.iconClass)},null,2)):t.createCommentVNode("",!0),t.createElementVNode("span",s,t.toDisplayString(c.label),1)],2)),[[r]])},i}(primevue.ripple,Vue);
